@{
    ViewBag.Title = "DashboardWidgets";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div id="page-wrap" ng-app="">
        <div class="row">
            <!--Second Div Start-->
            <div class="col-sm-5">
                <div class="row">
                    <div class="col-sm-10"><strong>Company DataSet</strong></div>
                </div>
                <div class="row">
                    <select class="col-sm-10" id="ddlDataSets"></select>
                </div>
            </div>

            <div class="col-sm-1 pull-right">
                <button id="linkPrintIRC" class="shield-chart-button" type="button" title="Print the chart">
                    <div class="sui-sprite shield-print-button-img"></div>
                </button>
                <input type="image" id="linkPrintPDFIRC" src="~/img/home/pdf_2.png" title="Download pdf document">

                <input type="image" id="linkPrintPNGIRC" src="~/img/home/image_icon.png" title="Download Image">
            </div>
            <!--Second Div End-->
        </div>
        <br />
        <div class="mainCnt">
            <div class="auctionCnt">
                <h4 class="bg-primary p-sm text-center" id="tblHeading"></h4>
                @*<h5 class="heading-small"><strong><span style="margin: 0 0 0 21px;" id="tblHeading"></span></strong></h5>*@
                <div class="col-sm-12" id="ACQNINACQS"></div>

                <div id="chart"></div>
            </div>
        </div>      
    </div>
</div>


@section PagespecificCss
{
    <link href="~/css/light/all.min.css" rel="stylesheet" />
    <link href="~/datacastdashboard/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/datacastassets/plugins/datatables/dataTables.min.css" rel="stylesheet" />
    @*<link href="~/css/style.css" rel="stylesheet" />*@  
    <link href="~/assets/css/DBWidgetStyles.css" rel="stylesheet" />
}

@section PageSpecificScript
{
    <script type="text/javascript" src="~/datacastassets/plugins/datatables/jquery.dataTables.js"></script>
    <script type="text/javascript" src="~/datacastassets/plugins/datatables/dataTables.bootstrap.js"></script>

    <script src="~/datacastjs/shieldui-all.min.js"></script>
    <script src="~/datacastjs/angular-1.4.8.min.js"></script>
    <script src="~/datacastjs/jspdf.debug.js"></script>
    <script src="~/datacastjs/html2canvas.js"></script>

    <script type="text/javascript">

        var userId = 1;
        var ticksRepeatCompany = 0;
        var indicatortitlestatus = 0,
             companytitlestatus = 0,
             isInvertedVal = false;

        var ticksRepeatCompany = 0,
        ticksRepeatIndicator = 0,
        CompanyMaxvalueLine = 0,
        IndicatorMaxvalueLine = 0,
        CompanyIndicatorMaxLineDifference = 0,
        CompanyZeroLine = 0,
        IndicatorZeroLine = 0,
        CompanyZeroLineFlag = false,
        IndicatorZeroLineFlag = false,
        CompanyNeededLines = 0,
        IndicatorNeededLines = 0,
        ZeroLinesAlign = false,
        IndicatorMinValueNew = "", IndicatorMaxValueNew = "",
        CompanyMinValueNew = "", CompanyMaxValueNew = "",
        k = 0,
        i = 0,
        j = 0;

        var ticksRepeatCompany = 0;
        var ticksRepeatIndicator = 0;
        var CompanyMaxvalueLine = 0;
        var IndicatorMaxvalueLine = 0;
        var CompanyIndicatorMaxLineDifference = 0;
        var CompanyZeroLine = 0;
        var IndicatorZeroLine = 0;
        var CompanyZeroLineFlag = false;
        var IndicatorZeroLineFlag = false;
        var CompanyNeededLines = 0;
        var IndicatorNeededLines = 0;
        var ZeroLinesAlign = false;
        var IndicatorMinValueNew = "",
            IndicatorMaxValueNew = "";
        var CompanyMinValueNew = "",
            CompanyMaxValueNew = "";
        var IndicatorMinValueOrg = "",
            IndicatorMaxValueOrg = "";
        var CompanyMinValueOrg = "",
            CompanyMaxValueOrg = "";

        var ChartIndicatorMinValue = "",
            ChartIndicatorMaxValue = "";
        var ChartCompanyMinValue = "",
            ChartCompanyMaxValue = "";

        //LOADING DATASETS DROPDOWN...
        function LoadDataSets() {
            // alert(1);

            var accountid = 2301; // _CompanyId;//2301;// $('#ddlAccounts option:selected').val();//2857;2857;//
            var divisionId = 0; //divisionID;//0;// divisionID;  //$('#ddlDivision option:selected').val(); //247;//$("#ddlDivision").val();//247;247;//

            if (divisionId == "" || divisionId == null || divisionId == "null") {
                divisionId = 0;
            }
            if (accountid != '' && accountid != '0') {
                var url = 'GetDataSetsByQBaseAccountIDAndDivisionID/';
                var modelobj = {
                    accountID: accountid,
                    divisionID: divisionId
                }
                $.getJSON(url, modelobj,
                              function (optionsData) {
                                  var select = $("#ddlDataSets");

                                  select.empty();

                                  $.each(optionsData, function (index, itemData) {
                                      select.append($('<option/>', {
                                          value: itemData.Text,
                                          text: itemData.Text
                                      }));
                                  });
                                  // alert("before datasetid");
                                  dataSetID = $("#ddlDataSets").val();
                                  dataSetIDLocal = $("#ddlDataSets").val();
                                  IDTdataSetName = $("#ddlDataSets option:selected").text();
                                  $(".spnDataSetName").text($("#ddlDataSets option:selected").text());
                                  $(".spnIDTDataSetName").text($("#ddlDataSets option:selected").text());
                                  //  $(".spnIRCDataSet1Name").text($("#ddlIRCDataSet1 option:selected").text());
                                  $(".spnIRCDataSet1Name").text($("#ddlIRCDataSet1 option:selected").text() + " for " + $("#ddl1stCaluculation option:selected").text());
                                  IRCdataSetName1 = $("#ddlIRCDataSet1 option:selected").text();
                                  //  $(".spnIRCDataSet2Name").text($("#ddlIRCDataSet2 option:selected").text());
                                  $(".spnIRCDataSet2Name").text($("#ddlIRCDataSet2 option:selected").text() + " for " + $("#ddl2ndCaluculation option:selected").text());
                                  IRCdataSetName2 = $("#ddlIRCDataSet2 option:selected").text();
                                  // alert(dataSetID);
                                  if (dataSetID != "" && dataSetID != "null" && dataSetID != null) {

                                      $('#tblHeading').text('Indicator Phase Signals for ' + $("#ddlDataSets").val());
                                      //TO LOAD PHASE VALUES OF DB WIDGETS IN DATATABLE...
                                      LoadPhaseValuesOfDBWidgets();

                                      //LoadIndicatorsList();
                                      //LoadIDTChartData();
                                      //LoadIRCChartData();
                                      ////For download data tab
                                      //$('#ddlDataSetsDD option:nth(0)').attr("selected", "selected");
                                      //$("#divIndicatorSection1").html('');//To clear Previos content if any
                                      //LoadIndicatorsListDownloadDataForMultipleCompanyDataSetsSection1();//For download data Company Data Part Indicator list Loading
                                      //$('#ddlDataSetsIndList option:nth(0)').attr("selected", "selected");
                                      //$("#divIndicatorDD").html('');//To clear Previos content if any
                                      //LoadIndicatorsListDownloadDataForMultipleCompanyDataSets();
                                      //$('.shield-chart-button').show();
                                  }
                                  else {
                                      // alert("Else CAse");//To clear Previous content if any.
                                      // LoadIndicatorsList();
                                      // LoadIDTChartData();
                                      // LoadIRCChartData();
                                      //For download data tab
                                      $('#ddlDataSetsDD').empty();
                                      $("#divIndicatorSectsion1").html('');//To clear Previos content if any
                                      $("#divIndicatorSection1").html('');
                                      $('#ddlDataSetsIndList').empty();
                                      $("#divIndicatorDD").html('');//To clear Previos content if any
                                      $('#divIndicatorDDShortCodes').html('');
                                      $('#divIndicator').empty();
                                      $('.divIndicator').empty();
                                      $(".divIndicatorSectsion1").empty();
                                      $("#chart").html('');
                                      $("#chartIRC").html('');
                                      $("#chartIDT").html('');
                                      $('.shield-chart-button').hide();
                                      // LoadIndicatorsListDownloadDataForMultipleCompanyDataSets();
                                  }
                              });

            }
        }

        $("#linkPrintIRC").on("click", function () {//Created By: Vsihnu,Prints page contents with CSS
            //$("#divLables").show();
            var left = ($(window).width() / 2) - (900 / 2), top = ($(window).height() / 2) - (600 / 2);
            var divContents = $("#divPrintIRC").html();
            var printWindow = window.open("", "print", "width=" + $(window).width() + ", height=" + $(window).height() + ", top=" + top + ", left=" + left);
            printWindow.document.write('<html><head><title> ITR Economics</title>');
            var myStyle = document.styleSheets;
            for (var i = 0; i < myStyle.length; i++) {
                if (myStyle[i].href != null && myStyle[i].href != "" && myStyle[i].href != 'null')
                    printWindow.document.write('<link rel="stylesheet" href="' + myStyle[i].href + '" type="text/css" />');
            }
            printWindow.document.write('</head><body >');

            printWindow.document.write(divContents);
            printWindow.document.write('</body></html>');
            printWindow.document.close();
            setTimeout(function () {
                printWindow.print();
            }, 2500);//To Avoid Blank page printing in Google Chrome
            //  $("#divLables").hide();
        });

        //Created by Nishanth for downloading Pdf
        $("#linkPrintPDFIRC").on("click", function () {
            //   $("#divLables").show();
            var name = "";
            //alert($("#spnDataSetName").text());
            var D1 = $("#ddlIRCDataSet1").val();
            var D2 = $("#ddlIRCDataSet2").val();
            if (D1 == D2) {
                name = "IRC_" + D1;
            }
            else {
                name = "IRC_" + D1 + " " + D2;
            }


            // var name = $("#spnIndicatorName").text();

            //var divContents = $("#divPrint").html();
            div_content = document.querySelectorAll("#divPrintIRC");
            div_content[0].style.backgroundColor = "white";
            //make it as html5 canvasotab
            html2canvas(div_content).then(function (canvas) {
                //change the canvas to jpeg image

                var image = canvas.toDataURL('image/jpeg');
                //  alert(image);
                // window.open(image);
                var doc = new jsPDF("l", "pt", "a4");

                // var width = 980;
                //  var height = 500;
                //   var pdf = new jsPDF("2", "pt", "letter");

                doc.addImage(image, 'JPEG', 0, 50, 850, 500);
                doc.save(name + ".pdf");
                // $("#divLables").hide();
            });
        });

        //Created by Nishnth for downloading .png
        $("#linkPrintPNGIRC").on("click", function () {
            //  $("#divLables").show();
            div_content = document.querySelectorAll("#divPrintIRC");
            div_content[0].style.backgroundColor = "white";
            //  var name = $("#spnDataSetName").text();
            var name = "";
            //alert($("#spnDataSetName").text());
            var D1 = $("#ddlIRCDataSet1").val();
            var D2 = $("#ddlIRCDataSet2").val();
            if (D1 == D2) {
                name = "IRC_" + D1;
            }
            else {
                name = "IRC_" + D1 + " " + D2;
            }
            // var name = $("#spnIndicatorName").text();
            //make it as html5 canvas
            html2canvas(div_content).then(function (canvas) {
                //change the canvas to jpeg image

                var image = canvas.toDataURL('image/jpeg');
                //    image = image.append('<html><head><title> ITR Economics</title>');

                // window.open(image);
                var uri = 'data:application/octet-stream;' + decodeURIComponent(image);
                var downloadLink = document.createElement("a");
                downloadLink.href = uri;
                downloadLink.download = name + ".png";
                document.body.appendChild(downloadLink);
                downloadLink.click();
                document.body.removeChild(downloadLink);
                $("#divLables").hide();
            });
        });

        //TO LOAD PHASE VALUES OF DB WIDGETS IN DATATABLE...
        function LoadPhaseValuesOfDBWidgets() {
            url = '/DatacastDBWidget/SelectPhaseValuesOfDBWidgetsList/';
            var modelObj = {
                CompanyShortCode: $("#ddlDataSets").val()
            };
            responseData = SendRequestJSON(url, modelObj);
            if (responseData.length > 0) {
                $("#ACQNINACQS").html(responseData);

                $(document).on('click', '.btnDelDbWidget', function (e) {
                    ajaxindicatorstart();

                    var ControlId = $(this).attr('id');
                    var DashboardWidgetsListId = ControlId.split('_')[1];

                    //alert(DashboardWidgetsListId);
                    //alert($("#ddlDataSets").val());
                    //alert(userId);

                    var urldelete = '/DatacastDBWidget//DeleteDBWidgetIndicator';
                    var modelobjlocal = {
                        DashboardWidgetsListId: DashboardWidgetsListId,
                        CompanyShortCode: $("#ddlDataSets").val(),
                        UserID: userId
                    };

                    var txt;
                    console.log('modelobjlocal -' + modelobjlocal);

                    if (confirm("Are you sure?") == true) {
                        var response = SendRequestJSON(urldelete, modelobjlocal);

                        if (response.result == '1') {
                            alert("Dashboard Widget indicator deleted successfully.");

                            LoadPhaseValuesOfDBWidgets();
                        } else {
                            alert("Unable to Delete Dashboard Widget indicator.");
                        }
                    } else {
                    }
                    ajaxindicatorstop();
                });
            }
        }

        $(document).ready(function (e) {
            LoadDataSets();

            LoadChartData();            
        });

        function GetMonthName(monthNumber) {
            var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
            return months[monthNumber - 1];
        }

        function LoadChart() {
            //LOAD CHART
            $("#chart").shieldChart({
                theme: "light",
                height: 500,
                //primaryHeader: {
                //    text: "ITR - DataCast: US Single-Unit Housing Starts"
                //},
                exportOptions: {
                    image: false,
                    print: false
                },
                axisX: [{
                    drawWidth: 1,
                    ticksRepeat: 24,
                    categoricalValues: $.map(combinationObject, function (item) {
                        //console.log('combinationObject - ' + combinationObject);
                        //console.log(item.Code);

                        if (item.Code == "Indicator") {
                            var dateValue = new Date(parseInt(item.MonthYear.substr(6)));
                            // dateValue= parseInt(dateValue.getMonth() + 1) + "/" + parseInt(dateValue.getDate()) + "/" + dateValue.getFullYear()
                            var monthName = GetMonthName(dateValue.getMonth() + 1);
                            var date = monthName + '  ' + dateValue.getFullYear(); //March  2018
                            //console.log('date -' + date);
                            return date;
                        }
                    }),
                    title: {
                        text: 'Years',
                        style: {
                            color: '#000000'
                        }
                    },
                    axisTickText: {
                        // return a new text for the ticks of the X-axis
                        format: function (text, axis, chart) {
                            // var dateValue = new Date(text);
                            var string = text;

                            //console.log('string - ' + string);

                            string = string.split("  ");

                            return string[1]; //Here 0-index will have month name and 1-index will have year//dateValue.getFullYear();
                        },
                        style: {
                            color: '#000000'
                        }
                    }

                }],
                axisY: [{
                    min: CompanyMinValue,
                    max: CompanyMaxValue,
                    //ticksRepeat:parseInt((Math.abs(CompanyMinValue) + CompanyMaxValue) / 8),
                    ticksRepeat: ticksRepeatCompany, //Math.round( (Math.abs(CompanyMinValue)+CompanyMaxValue)/8),
                    title: {
                        text: $.map(combinationObject, function (item) {

                            if (companytitlestatus == 0) {
                                if (item.StatPref1 == "1/12") {
                                    companytitlestatus = 1
                                    //  return  'Company 1/12 (Annual Growth Rate)'
                                    return 'Company - 1/12 '

                                } else if (item.StatPref1 == "3/12") {
                                    companytitlestatus = 1
                                    //  return  'Company 12/12 (Annual Growth Rate)'
                                    return 'Company - 3/12 '
                                } else if (item.StatPref1 == "Raw") {
                                    companytitlestatus = 1
                                    //  return  'Company 12/12 (Annual Growth Rate)'
                                    return 'Company - Monthly '
                                } else {
                                    companytitlestatus = 1
                                    //   return  'Company 12/12 (Annual Growth Rate)'
                                    return 'Company - 12/12 '
                                }
                            }

                        }), // Datacast 2.5 change
                        style: {
                            color: '#000000'
                        }


                    },
                    axisTickText: {
                        format: function (text, axis, chart) {
                            if (text > 0)
                                CompanyMaxValueNew = text;
                            else if (i == 0) {
                                CompanyMinValueNew = text;
                                i = i + 1;
                            }

                            if (text == 0) {
                                CompanyZeroLineFlag = true;
                                //alert(CompanyZeroLineFlag);
                            }
                            if (CompanyZeroLineFlag == false) {
                                CompanyZeroLine = CompanyZeroLine + 1;
                            }

                            return text;
                        },
                        style: {
                            color: '#000000'
                        }

                    },
                    plotLines: [{
                        start: 0,
                        drawWidth: 3,
                        drawColor: '#C0C0C0'
                    }]
                }, {
                    inverseOrder: isInvertedVal,
                    min: IndicatorMinValue,
                    max: IndicatorMaxValue,
                    //ticksRepeat: parseInt((Math.abs(IndicatorMinValue) + IndicatorMaxValue) / 8),
                    ticksRepeat: ticksRepeatIndicator, //Math.round((Math.abs(IndicatorMinValue) + IndicatorMaxValue)/8),
                    title: {
                        text: $.map(combinationObject, function (item) {
                            if (indicatortitlestatus == 0) {
                                if (item.StatPref1 == "1/12") {
                                    indicatortitlestatus = 1
                                    // return  'Indicator 1/12 (Monthly Growth Rate)'
                                    return 'Indicator - 1/12 '

                                } else if (item.StatPref1 == "3/12") {
                                    indicatortitlestatus = 1
                                    // return  'Indicator 3/12 (Annual Growth Rate)'
                                    return ' Indicator - 3/12 '
                                } else if (item.StatPref1 == "Raw") {
                                    indicatortitlestatus = 1
                                    // return  'Indicator 3/12 (Annual Growth Rate)'
                                    return ' Indicator - Monthly '
                                } else {
                                    indicatortitlestatus = 1
                                    //    return  'Indicator 12/12 (Annual Growth Rate)'
                                    return ' Indicator - 12/12 '
                                }
                            }

                        }), // Datacast 2.5 change
                        style: {
                            color: '#000000'
                        }
                        //align: 'high',
                        //textAngle: 1,
                        //offset:60

                    },
                    //seriesSettings: {
                    //    line: {
                    //        pointMark: {
                    //            drawWidth: 20
                    //        }
                    //    }
                    //},
                    swapLocation: true,
                    axisTickText: {
                        format: function (text, axis, chart) {


                            if (text > 0)
                                IndicatorMaxValueNew = text;
                            else if (j == 0) {
                                IndicatorMinValueNew = text;
                                j = j + 1;
                            }


                            if (isInvertedVal == false) {

                                if (text == 0) {
                                    IndicatorZeroLineFlag = true;

                                }
                                if (IndicatorZeroLineFlag == false) {
                                    IndicatorZeroLine = IndicatorZeroLine + 1;
                                }
                            } else {
                                if (text == 0) {
                                    IndicatorZeroLine = 0;
                                }
                                if (text > 0) {
                                    IndicatorZeroLine = IndicatorZeroLine + 1;
                                }
                            }


                            return text;
                        },
                        style: {
                            color: '#000000'
                        },
                        textAngle: 0
                    }
                }],
                dataSeries: [




                    {
                        seriesType: 'line',
                        pointMark: {
                            enabled: false,
                            drawWidth: 0
                        },
                        axis: 0,
                        tooltipSettings: {
                            enabled: true,
                            axisMarkers: {
                                enabled: true,
                                //mode: 'xy',
                                color: 'red',
                                width: 1,
                                zIndex: 3
                            },


                            customPointText: $.map(combinationObject, function (item) {
                                if (item.Code == "Indicator" && item.Forecast == true) {
                                    //  alert(item.StatPref1);

                                    if (item.StatPref1 == "1/12") {
                                        return shield.format(
                                            '<span><b> Indicator Data Percent Change in 12-Month Moving Average: {value}</b></span>', {
                                                value: item.C1By12 //point.y
                                            }
                                        );
                                    } else if (item.StatPref1 == "3/12") {
                                        return shield.format(
                                            '<span><b> Indicator Data Percent Change in 12-Month Moving Average: {value}</b></span>', {
                                                value: item.C3BY12 //point.y
                                            }
                                        );
                                    } else if (item.StatPref1 == "Raw") {
                                        return shield.format(
                                            '<span><b> Indicator Data Percent Change in 12-Month Moving Average: {value}</b></span>', {
                                                value: item.Monthly //point.y
                                            }
                                        );
                                    } else {
                                        return shield.format(
                                            '<span><b> Indicator Data Percent Change in 12-Month Moving Average: {value}</b></span>', {
                                                value: item.C12BY12 //point.y
                                            }
                                        );
                                    }
                                }
                            })
                            /*
                            customPointText: function (point, chart, text) {
                                return shield.format(
                                    '<span><b> Company Percent Change in 12-Month Moving Average: {value}</b></span>',
                                    {
                                        value: point.y
                                    }
                                );
                            }
                            */
                        },
                        collectionAlias: "Company Division Data",
                        data: $.map(combinationObject, function (item) {
                            if (item.Code == "Company") {
                                if (item.StatPref1 == "1/12") {
                                    if (k == 0) {
                                        if (item.C1By12 < 0) {
                                            if (ChartCompanyMinValue > item.C1By12)
                                                ChartCompanyMinValue = item.C1By12;
                                        } else {
                                            if (ChartCompanyMaxValue < item.C1By12)
                                                ChartCompanyMaxValue = item.C1By12;
                                        }
                                    }

                                    return {
                                        y: item.C1By12
                                    } // //return { y: item.C12BY12 }
                                } else if (item.StatPref1 == "3/12") {
                                    if (k == 0) {
                                        if (item.C3BY12 < 0) {
                                            if (ChartCompanyMinValue > item.C3BY12)
                                                ChartCompanyMinValue = item.C3BY12;
                                        } else {
                                            if (ChartCompanyMaxValue < item.C3BY12)
                                                ChartCompanyMaxValue = item.C3BY12;
                                        }
                                    }

                                    return {
                                        y: item.C3BY12
                                    } // //return { y: item.C12BY12 }
                                } else if (item.StatPref1 == "Raw") {
                                    if (k == 0) {
                                        if (item.Monthly < 0) {
                                            if (ChartCompanyMinValue > item.Monthly)
                                                ChartCompanyMinValue = item.Monthly;
                                        } else {
                                            if (ChartCompanyMaxValue < item.Monthly)
                                                ChartCompanyMaxValue = item.Monthly;
                                        }
                                    }

                                    return {
                                        y: item.Monthly
                                    } // //return { y: item.C12BY12 }
                                } else {
                                    if (k == 0) {
                                        if (item.C12BY12 < 0) {
                                            if (ChartCompanyMinValue > item.C12BY12)
                                                ChartCompanyMinValue = item.C12BY12;
                                        } else {
                                            if (ChartCompanyMaxValue < item.C12BY12)
                                                ChartCompanyMaxValue = item.C12BY12;
                                        }
                                    }

                                    return {
                                        y: item.C12BY12
                                    } // //return { y: item.C12BY12 }
                                }
                            }
                        })

                    }, {
                        seriesType: 'scatter',
                        axis: 0,
                        tooltipSettings: {
                            enabled: true,
                            axisMarkers: {
                                enabled: true,
                                color: 'red',
                                width: 1,
                                zIndex: 3
                            },
                            customPointText: function (point, chart, text) {
                                return shield.format(
                                    '<span><b> Company Forecasted 12-Month Moving Average: {value}</b></span>', {
                                        value: point.y
                                    }
                                );
                            }
                        },
                        pointMark: {
                            enabled: true,
                            drawWidth: 0
                        },
                        color: 'lightblue',
                        collectionAlias: "Company Forecast",
                        // data: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 5.9, 11.0, 20.0, -7.8, 9.0]
                        data: $.map(combinationObject, function (item) {
                            //  console.log(item)
                            if (item.Code == "Company" && item.Forecast == false)
                                return {
                                    y: null
                                }
                            else if (item.Code == "Company" && item.Forecast == true) {
                                if (item.StatPref1 == "1/12") {
                                    return {
                                        y: item.C1By12
                                    }
                                } else if (item.StatPref1 == "3/12") {
                                    return {
                                        y: item.C3BY12
                                    }
                                } else if (item.StatPref1 == "Raw") {
                                    return {
                                        y: item.Monthly
                                    }
                                } else {
                                    return {
                                        y: item.C12BY12
                                    }
                                }
                            }
                        })
                    }


                    , {
                        seriesType: 'line',
                        axisY: 1,
                        tooltipSettings: {
                            enabled: true,
                            axisMarkers: {
                                enabled: true,
                                //mode: 'xy',
                                color: 'red',
                                width: 1,
                                zIndex: 3
                            },
                            customPointText: $.map(combinationObject, function (item) {
                                if (item.Code == "Indicator" && item.Forecast == true) {


                                    if (item.StatPref1 == "1/12") {
                                        return shield.format(
                                            '<span><b> Indicator Data Percent Change in 12-Month Moving Average: {value}</b></span>', {
                                                value: item.C1By12 //point.y
                                            }
                                        );
                                    } else if (item.StatPref1 == "3/12") {
                                        return shield.format(
                                            '<span><b> Indicator Data Percent Change in 12-Month Moving Average: {value}</b></span>', {
                                                value: item.C3BY12 //point.y
                                            }
                                        );
                                    } else if (item.StatPref1 == "Raw") {
                                        return shield.format(
                                            '<span><b> Indicator Data Percent Change in 12-Month Moving Average: {value}</b></span>', {
                                                value: item.Monthly //point.y
                                            }
                                        );
                                    } else {
                                        return shield.format(
                                            '<span><b> Indicator Data Percent Change in 12-Month Moving Average: {value}</b></span>', {
                                                value: item.C12BY12 //point.y
                                            }
                                        );
                                    }
                                }
                            })

                            /*
                            customPointText: function (point, chart, text) {
                                return shield.format(
                                    '<span><b> Indicator Data Percent Change in 12-Month Moving Average: {value}</b></span>',
                                    {
                                        value: point.y
                                    }
                                );
                            }
                            */
                        },
                        pointMark: {
                            enabled: false,
                            drawWidth: 0
                        },
                        color: 'green',
                        collectionAlias: "Indicator History",
                        data: $.map(combinationObject, function (item) {
                            if (item.Code == "Indicator" && item.Forecast == false) {

                                //if (item.C12BY12 < 0 && IndicatorMinValueFlag == false) {
                                //    if (item.C12BY12 <= IndicatorMinValueOrg)
                                //        IndicatorMinValueFlag = true;
                                //}


                                if (item.StatPref1 == "1/12") {
                                    if (k == 0) {
                                        if (item.C1By12 < 0) {
                                            if (ChartIndicatorMinValue > item.C1By12)
                                                ChartIndicatorMinValue = item.C1By12;
                                        } else {
                                            if (ChartIndicatorMaxValue < item.C1By12)
                                                ChartIndicatorMaxValue = item.C1By12;
                                        }
                                    }

                                    return {
                                        y: item.C1By12
                                    }
                                } else if (item.StatPref1 == "3/12") {
                                    if (k == 0) {
                                        if (item.C3BY12 < 0) {
                                            if (ChartIndicatorMinValue > item.C3BY12)
                                                ChartIndicatorMinValue = item.C3BY12;
                                        } else {
                                            if (ChartIndicatorMaxValue < item.C3BY12)
                                                ChartIndicatorMaxValue = item.C3BY12;
                                        }
                                    }

                                    return {
                                        y: item.C3BY12
                                    }
                                } else if (item.StatPref1 == "Raw") {
                                    if (k == 0) {
                                        if (item.Monthly < 0) {
                                            if (ChartIndicatorMinValue > item.Monthly)
                                                ChartIndicatorMinValue = item.Monthly;
                                        } else {
                                            if (ChartIndicatorMaxValue < item.Monthly)
                                                ChartIndicatorMaxValue = item.Monthly;
                                        }
                                    }

                                    return {
                                        y: item.Monthly
                                    }
                                } else {
                                    if (k == 0) {
                                        if (item.C12BY12 < 0) {
                                            if (ChartIndicatorMinValue > item.C12BY12)
                                                ChartIndicatorMinValue = item.C12BY12;
                                        } else {
                                            if (ChartIndicatorMaxValue < item.C12BY12)
                                                ChartIndicatorMaxValue = item.C12BY12;
                                        }
                                    }

                                    return {
                                        y: item.C12BY12
                                    }
                                }
                            }
                                //return { y: item.C12BY12 }
                            else if (item.Code == "Indicator" && item.Forecast == true)
                                return {
                                    y: null
                                }
                        })
                    }, {
                        seriesType: 'scatter',
                        axisY: 1,
                        tooltipSettings: {
                            enabled: true,
                            axisMarkers: {
                                enabled: true,
                                color: 'red',
                                width: 1,
                                zIndex: 3
                            },
                            customPointText: function (point, chart, text) {
                                return shield.format(
                                    '<span><b> Indicator Forecasted 12-Month Moving Average: {value}</b></span>', {
                                        value: point.y
                                    }
                                );
                            }
                        },
                        pointMark: {
                            enabled: true,
                            drawWidth: 0
                        },
                        color: 'lightgreen',
                        collectionAlias: "Indicator Forecast",
                        // data: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 5.9, 11.0, 20.0, -7.8, 9.0]
                        data: $.map(combinationObject, function (item) {
                            //  console.log(item)
                            if (item.Code == "Indicator" && item.Forecast == false)
                                return {
                                    y: null
                                }
                            else if (item.Code == "Indicator" && item.Forecast == true) {
                                if (item.StatPref1 == "1/12") {
                                    return {
                                        y: item.C1By12
                                    }
                                } else if (item.StatPref1 == "3/12") {
                                    return {
                                        y: item.C3BY12
                                    }
                                } else if (item.StatPref1 == "Raw") {
                                    return {
                                        y: item.Monthly
                                    }
                                } else {
                                    return {
                                        y: item.C12BY12
                                    }
                                }
                            }
                        })
                    }
                ],
                chartLegend: {
                    enabled: true,
                    align: 'center'
                },
                events: { //Called on Chart load completed
                    load: function (event) {
                        ajaxindicatorstop();

                        if (CompanyZeroLine == IndicatorZeroLine) {
                            $("#chart").show();
                        } else if (isInvertedVal == false && k == 0) {
                            k = k + 1;
                            LoadChartCalculations(1);
                        } else if (isInvertedVal == false && k == 1) {
                            k = k + 1;
                            LoadChartCalculations(2);

                        } else if (isInvertedVal == false && k == 2) {
                            k = k + 1;
                            LoadChartCalculations(3);

                        } else if (isInvertedVal == true && k == 0) {

                            k = k + 1;
                            LoadChartCalculations(1);
                        } else if (isInvertedVal == true && k == 1) {
                            k = k + 1;
                            LoadChartCalculations(2);
                        } else if (isInvertedVal == true && k == 2) {
                            k = k + 1;
                            LoadChartCalculations(3);
                        } else if (isInvertedVal == true && k == 3) {
                            k = k + 1;
                            LoadChartCalculations(4);
                        } else if (isInvertedVal == true && k == 4) {
                            k = k + 1;
                            LoadChartCalculations(5);
                        }

                    }
                }
            });
        }

        function LoadChartData() {
            var duration = 0;
            var accessduration = 0;
           
            indicatorShotrCode = 'BRAZTIP';
            companyCode = 'Timken-1-NA-Industrial Distribution'; //$("#ddlDataSets").val();
            var isInvertedVal = false;
            var moveMonths = 0;
            var _CompanyId = 2301;

            $.getJSON("/DatacastHome/GetIndicatorCompanyAndIndicatorDataByShortCodes?CompanyShortCode=" + companyCode + "&IndicatorShortCode=" + indicatorShotrCode + "&InverseOrder=" + isInvertedVal + "&MoveMonths=" + moveMonths + "&CustomerCompanyID=" + _CompanyId,
                function (data) {
                    combinationObject = JSON.parse(data);
                    IDTcombinationObject = combinationObject; //For InternalDataTrends chart
                    var IndicatorMINFlag = false,
                        IndicatorMAXFlag = false,
                        CompanyMINFlag = false,
                        CompanyMAXFlag = false;
                    for (i = 0; i < combinationObject.length; i++) {
                        var obj = combinationObject[i];
                        for (key in obj) {
                            // console.log("Key is " + key + "  value is " + obj[key]);
                            var value1 = obj[key];
                            if (key == "Duration") {
                                duration = value1;
                            }
                            if (key == "AccessDuration") {
                                accessduration = value1;
                            }
                            if (key == "MinValue" && obj["Code"] == "Indicator" && IndicatorMINFlag == false) {
                                IndicatorMinValue = value1;
                                IndicatorMINFlag = true;

                                //console.log('MinValue - ' + IndicatorMinValue);
                            } else if (key == "MaxValue" && obj["Code"] == "Indicator" && IndicatorMAXFlag == false) {
                                IndicatorMaxValue = value1;
                                IndicatorMAXFlag = true;

                                //console.log('MaxValue - ' + IndicatorMaxValue);
                            } else if (key == "MinValue" && obj["Code"] == "Company" && CompanyMINFlag == false) {
                                CompanyMinValue = value1;
                                CompanyMINFlag = true;

                                //console.log('CompanyMinValue - ' + CompanyMinValue);
                            } else if (key == "MaxValue" && obj["Code"] == "Company" && CompanyMAXFlag == false) {
                                CompanyMaxValue = value1;
                                CompanyMAXFlag = true;
                            }

                            if (IndicatorMINFlag == true && IndicatorMAXFlag == true && CompanyMINFlag == true && CompanyMAXFlag == true) {                              
                                i = combinationObject.length;
                                break;
                            }
                        }

                    }
                    if (combinationObject != undefined && combinationObject != "") {
                        LoadChart();                        
                    }
                    // LoadDDChart();
                }).error(function (jqXHR, textStatus, errorThrown) {
                    //  // console.log("incoming Text " + jqXHR.responseText);
                    ajaxindicatorstop(); // Remove the loader
                    document.getElementById("displayMessage").innerHTML = 'There is something wrong with the Combination you selected, please try a different combination';
                    $('#displayMessage').prepend('<span class="button b-close"><span>X</span></span>'); //Prepending Close button to popup
                    $('#displayMessage').bPopup({
                        autoClose: 2000
                        // , onClose: function () { window.history.back(); }
                    });
                    //$('#chart').height(500);
                });
        }

        function ajaxindicatorstart() {
            // alert("entererd");
            if ($('body').find('#loadingDiv').attr('id') != 'loadingDiv') {
                var loadingString = '<div id="loadingDiv" class="modal1"><div id="loading-image" class="center"><img src="../assets/img/loader.gif" alt="Loading..." /></div></div>';
                $('body').append(loadingString);
                $('#loadingDiv .bg').height('100%');
                $('#loadingDiv').fadeIn(300);
                $('body').css('cursor', 'wait');
                $('body').css('cursorDD', 'wait');
            }
        };

        function ajaxindicatorstop() {
            $('#loadingDiv .bg').height('100%');
            $('#loadingDiv').remove();
            $('body').css('cursor', 'default');
            $('body').css('cursorDD', 'default');
        }
    </script>
}
